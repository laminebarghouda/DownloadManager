/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package main.java.app;

import javafx.application.Application;
import javafx.beans.InvalidationListener;
import javafx.beans.Observable;
import javafx.collections.FXCollections;
import javafx.collections.ListChangeListener;
import javafx.collections.ObservableList;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseDragEvent;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class App extends Application {
    // Button DownloadButton =new Button("Download");
    //public class TextFieldExperiments extends Application  {

    Button download;
    Button pause;
    Button resume;
    /* Ajout de deux fonctionnalités : pauseAll pour mettre en pause tous les télechargements en cours
                                       resumeAll pour compléter tous les télechargements non finis
       author : Lamine
    */
    Button pauseAll;
    Button resumeAll;

    @Override
    public void start(Stage primaryStage) throws Exception {
        SimpleDM sdm=new SimpleDM();
        primaryStage.setTitle("HBox Experiment 1");
        Scene scene=new Scene((new Group()));
        //TextField textField = new TextField();
        TextField URL = new TextField();

        download = new Button("Download");
        pause = new Button("Pause");
        resume = new Button("Resume");
        /* Déclaration de deux boutons ajoutés
       author : Lamine
    */
        pauseAll = new Button("Pause All");
        resumeAll = new Button("Resume All");

        /*download.setOnAction(action -> {
            System.out.println(URL.getText());
            String  link = URL.getText();
            String nom ="/home/smail/Bureau/UserInterface/";
            File out = new  File(nom+"telecharger");

            try {
                Download t1 = new Download(link, out);
                sdm.array_download.add(t1);
                sdm.submit(sdm.array_download.get(0));
                //PooledDM dm =new PooledDM (2);
                //dm.lancer(t1);
            } catch (IOException e) {
                e.printStackTrace();
            }

            //PooledDM pdm=new PooledDM(2);
            //t1.pause();
            //pdm.lancer(t1);
            // Download finalT = t1;
            // pause.setOnAction(action2 ->{  finalT.pause();});
            //pdm.lancer(t2);

            //  resume.setOnAction(action3->{  finalT.resume();});


        });*/




        TextField name = new TextField();
        ObservableList<Download> data = FXCollections.observableArrayList();
        TableView<Download> table = new TableView<Download>();
        table.setEditable(true);
        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
        table.setPrefWidth(1300);
        table.setPrefHeight(650);

        TableColumn inputfileCol = new TableColumn("Link");
        inputfileCol.setMaxWidth(300);
        inputfileCol.setCellValueFactory(new PropertyValueFactory<Download, String>("link"));

        TableColumn outputfileCol = new TableColumn("Out");
        outputfileCol.setMaxWidth(300);
        outputfileCol.setCellValueFactory(new PropertyValueFactory<Download, String>("out"));


                /*TableColumn statusfileCol =new TableColumn("status File");
                statusfileCol.setMaxWidth(500);
                statusfileCol.setCellValueFactory(new PropertyValueFactory<Download, STAT >("statusFile"));*/

        TableColumn pourcentageCol=new TableColumn("Percentdownloaded");
        pourcentageCol.setMaxWidth(200);
        pourcentageCol.setCellValueFactory(new PropertyValueFactory<Download, Integer>("percentdownloaded"));

        table.getColumns().addAll(inputfileCol,outputfileCol,pourcentageCol);
        table.setItems(data);
           /* TextField fileName = new TextField();
            Button button = new Button("Download");*/

           /* Ajout de deux fonctionnalités au HBox
              author : Lamine
            */
        HBox hbox = new HBox(URL, download,pause,resume,pauseAll,resumeAll);

        //HBox hbox1 = new HBox(URL, download,pause,resume);

        //  Scene scene = new Scene(hbox, 500, 100);
        VBox vbox= new VBox();
        vbox.setSpacing(5);
        vbox.setPadding(new Insets(10, 0, 0, 10));
        vbox.getChildren().addAll(hbox,table);

        download.setOnMouseClicked(new EventHandler<MouseEvent>() {
            @Override
            public void handle(MouseEvent event) {
                String  link = URL.getText();
                String occurence ="";
                int counter = 0;
                boolean exist=true;
                File out = null;
                /* Controler l'existence d'un fichier sous le même nom pour éviter de l'écraser
                     author : Lamine
                 */
                FileInputStream fis = null;
                String extension = URL.getText().substring(URL.getText().lastIndexOf('.'));
                String fileName = URL.getText().substring(URL.getText().lastIndexOf('/')+1,URL.getText().lastIndexOf('.'));
                while(exist){
                    /* Si le fichier existe on incrémente l'indice counter ( file1.txt sinon file2.txt etc...)
                        Si le fichier est inexistant donc une exception de type FileNotFoundException est lancé permettant
                        de créer le nouveau fichier de téléchargement en toute sécurité et pas de risque de sur-écriture
                        author : Lamine
                 */
                    try {
                        fis = new FileInputStream(fileName + "_" + occurence + extension);
                    } catch (FileNotFoundException e) {
                        out = new File(fileName + "_" + occurence + extension);
                        exist = false;
                    } finally {
                        counter++;
                        occurence = String.valueOf(counter);
                    }
                }

                try {
                    Download t1 = new Download(link, out,data);
                    sdm.array_download.add(t1);

                    data.add(t1);

                    sdm.submit(sdm.array_download.get(sdm.array_download.size()-1));
                    //PooledDM dm =new PooledDM (2);
                    //dm.lancer(t1);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        pause.setOnMouseClicked(new EventHandler<MouseEvent>() {
            @Override
            public void handle(MouseEvent event) {
                try {
                    sdm.pause(sdm.array_download.get(table.getSelectionModel().getSelectedIndex()));
                    /* gestion d'un appui erroné sur un fil de téléchargement
                     author : Lamine
                 */
                } catch (java.lang.ArrayIndexOutOfBoundsException a){
                    System.out.println("Wrong Click");
                }
            }
        });

        resume.setOnAction(action ->{
            try{
            sdm.resume(sdm.array_download.get(table.getSelectionModel().getSelectedIndex()));
            /* gestion d'un appui erroné sur un fil de téléchargement
                     author : Lamine
                 */
        } catch (java.lang.ArrayIndexOutOfBoundsException a){
                System.out.println("Wrong Click");
            }
        });

        /* Gestion des actions lancés suité à l'appui sur le bouton pauseAll
                     author : Lamine
                 */
        pauseAll.setOnMouseClicked(new EventHandler<MouseEvent>() {
            @Override
            public void handle(MouseEvent event) {
                /* Elle permet de charger tous les threads de téléchargement,
                 de vérifier s'ils sont en cours de téléchargement, si oui les mettres en pause
                 ( on peut pas mettre en pause une téléchargement complète )
                     author : Lamine
                 */
                for (int i =0;i<sdm.array_download.size();i++)
                    if(sdm.array_download.get(i).mState == 0)
                sdm.pause(sdm.array_download.get(i));
            }
        });

        resumeAll.setOnAction(action -> {
                for (int i =0;i<sdm.array_download.size();i++) {
                    /* Elle permet de charger tous les threads de téléchargement,
                    de vérifier s'ils sont en pause, si oui les resumer
                    ( on peut pas resumer une téléchargement complète ou en cours de téléchargement )
                     author : Lamine
                 */
                    if (sdm.array_download.get(i).getmState() == 1) {
                        sdm.resume(sdm.array_download.get(i));
                    }
                }
        });

        ((Group) scene.getRoot()).getChildren().addAll(vbox);
        primaryStage.setScene(scene);
        primaryStage.show();

    }

    public static void main(String[] args) {
        Application.launch(args);
    }
    //}

    //public class FxLabelExample extends Application
    // {
   /* public static void main(String[] args) {
        Application.launch(args);
    }

    @Override
    public void start(Stage stage) {
        // Create the Text Fields
        TextField URL = new TextField();
        TextField lastNameFld = new TextField();

        String str=URL.getText();
        String  link = "https://www.emse.fr/~picard/cours/1A/java/livretJava.pdf";
        File out = new  File("/home/smail/Bureau/ProjetJava/livretJava.pdf");
        Download t1= new Download(link, out);
        SimpleDM sdm=new SimpleDM();
        sdm.submit(t1);

        // Create the Labels
        Label firstNameLbl = new Label("_First Name:");
        Label lastNameLbl = new Label("_Last Name:");

        // Bind the Label to the according Field
        firstNameLbl.setLabelFor(URL);
        // Set mnemonic parsing to the Label
        firstNameLbl.setMnemonicParsing(true);

        // Bind the Label to the according Field
        lastNameLbl.setLabelFor(lastNameFld);
        // Set mnemonic parsing to the Label
        lastNameLbl.setMnemonicParsing(true);

        // Create the GridPane
        GridPane root = new GridPane();
        // Add the Labels and Fields to the GridPane
        root.addRow(0, firstNameLbl, URL);
        root.addRow(1, lastNameLbl, lastNameFld);
        // Set the Size of the GridPane
        root.setMinSize(350, 250);

        /*
         * Set the padding of the GridPane
         * Set the border-style of the GridPane
         * Set the border-width of the GridPane
         * Set the border-insets of the GridPane
         * Set the border-radius of the GridPane
         * Set the border-color of the GridPane
        //
        root.setStyle("-fx-padding: 10;" +
                "-fx-border-style: solid inside;" +
                "-fx-border-width: 2;" +
                "-fx-border-insets: 5;" +
                "-fx-border-radius: 5;" +
                "-fx-border-color: blue;");

        // Create the Scene
        Scene scene = new Scene(root);
        // Add the scene to the Stage
        stage.setScene(scene);
        // Set the title of the Stage
        stage.setTitle("A Label Example");
        // Display the Stage
        stage.show();
    }*/





             /* public String getGreeting() {   return "Hello world.";}
                public static void main(String[] args) {
                String  link = "https://www.emse.fr/~picard/cours/1A/java/livretJava.pdf";
                String  link2 = "https://moodlesupd.script.univ-paris-diderot.fr/pluginfile.php/1058917/mod_resource/content/2/projet%20cpoo5%20v1.pdf";
                File out = new  File("/home/smail/Bureau/ProjetJava/livretJava.pdf");
                File out2 = new  File("/home/smail/Bureau/ProjetJava/projet_java_2019");
                Download t1= new Download(link, out);
                Download t2= new Download(link, out2);
                SimpleDM sdm=new SimpleDM();
                MultipleDM mDM =new MultipleDM(2);
                mDM.submit(t1);
                mDM.submit(t2);
              //  sdm.submit(t1)
                     PooledDM pdm=new PooledDM(2);
                     pdm.lancer(t1);
                     pdm.lancer(t2);
            }*/

}

